using System;
using System.Collections.Generic;
using System.Data.Entity.Migrations;
using System.Linq;
using System.Web;
using SmartAdminMvc.Models;

namespace SmartAdminMvc.App_Helpers
{
    public class CatalogManager
    {
        public static void Seed() {
            using (var db = new DataContext()) {
                if (db.Catalog.Any()) return;
                try
                {
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "002", Name = "BANAMEX", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "006", Name = "BANCOMEXT", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "009", Name = "BANOBRAS", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "012", Name = "BBVA BANCOMER", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "014", Name = "SANTANDER", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "019", Name = "BANJERCITO", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "021", Name = "HSBC", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "030", Name = "BAJIO", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "032", Name = "IXE", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "036", Name = "INBURSA", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "037", Name = "INTERACCIONES", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "042", Name = "MIFEL", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "044", Name = "SCOTIABANK", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "058", Name = "BANREGIO", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "059", Name = "INVEX", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "060", Name = "BANSI", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "062", Name = "AFIRME", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "072", Name = "BANORTE", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "102", Name = "THE ROYAL BANK", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "103", Name = "AMERICAN EXPRESS", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "106", Name = "BAMSA", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "108", Name = "TOKYO", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "110", Name = "JP MORGAN", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "112", Name = "BMONEX", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "113", Name = "VE POR MAS", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "116", Name = "ING", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "124", Name = "DEUTSCHE", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "126", Name = "CREDIT SUISSE", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "127", Name = "AZTECA", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "128", Name = "AUTOFIN", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "129", Name = "BARCLAYS", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "130", Name = "COMPARTAMOS", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "131", Name = "BANCO FAMSA", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "132", Name = "BMULTIVA", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "133", Name = "ACTINVER", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "134", Name = "WAL-MART", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "135", Name = "NAFIN", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "136", Name = "INTERBANCO", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "137", Name = "BANCOPPEL", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "138", Name = "ABC CAPITAL", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "139", Name = "UBS BANK", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "140", Name = "CONSUBANCO", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "141", Name = "VOLKSWAGEN", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "143", Name = "CIBANCO", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "145", Name = "BBASE", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "166", Name = "BANSEFI", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "168", Name = "HIPOTECARIA FEDERAL", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "600", Name = "MONEXCB", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "601", Name = "GBM", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "602", Name = "MASARI", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "605", Name = "VALUE", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "606", Name = "ESTRUCTURADORES", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "607", Name = "TIBER", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "608", Name = "VECTOR", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "610", Name = "B&B", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "614", Name = "ACCIVAL", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "615", Name = "MERRILL LYNCH", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "616", Name = "FINAMEX", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "617", Name = "VALMEX", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "618", Name = "UNICA", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "619", Name = "MAPFRE", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "620", Name = "PROFUTURO", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "621", Name = "CB ACTINVER", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "622", Name = "OACTIN", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "623", Name = "SKANDIA", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "626", Name = "CBDEUTSCHE", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "627", Name = "ZURICH", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "628", Name = "ZURICHVI", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "629", Name = "SU CASITA", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "630", Name = "CB INTERCAM", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "631", Name = "CI BOLSA", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "632", Name = "BULLTICK CB", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "633", Name = "STERLING", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "634", Name = "FINCOMUN", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "636", Name = "HDI SEGUROS", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "637", Name = "ORDER", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "638", Name = "AKALA", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "640", Name = "CB JPMORGAN", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "642", Name = "REFORMA", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "646", Name = "STP", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "647", Name = "TELECOMM", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "648", Name = "EVERCORE", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "649", Name = "SKANDIA", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "651", Name = "SEGMTY", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "652", Name = "ASEA", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "653", Name = "KUSPIT", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "655", Name = "SOFIEXPRESS", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "656", Name = "UNAGRA", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "659", Name = "OPCIONES EMPRESARIALES DEL NOROESTE", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "901", Name = "CLS", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "902", Name = "INDEVAL", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "670", Name = "LIBERTAD", Type = "Bank" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "AGU", Name = "Aguascalientes", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "BCN", Name = "Baja California", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "BCS", Name = "Baja California Sur", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "CAM", Name = "Campeche", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "CHP", Name = "Chiapas", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "CHH", Name = "Chihuahua", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "COA", Name = "Coahuila", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "COL", Name = "Colima", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "DIF", Name = "Ciudad de México", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "DUR", Name = "Durango", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "GUA", Name = "Guanajuato", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "GRO", Name = "Guerrero", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "HID", Name = "Hidalgo", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "JAL", Name = "Jalisco", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "MEX", Name = "Estado de México", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "MIC", Name = "Michoacán", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "MOR", Name = "Morelos", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "NAY", Name = "Nayarit", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "NLE", Name = "Nuevo León", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "OAX", Name = "Oaxaca", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "PUE", Name = "Puebla", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "QUE", Name = "Querétaro", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "ROO", Name = "Quintana Roo", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "SLP", Name = "San Luis Potosí", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "SIN", Name = "Sinaloa", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "SON", Name = "Sonora", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "TAB", Name = "Tabasco", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "TAM", Name = "Tamaulipas", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "TLA", Name = "Tlaxcala", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "VER", Name = "Veracruz", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "YUC", Name = "Yucatán", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "ZAC", Name = "Zacatecas", Type = "State" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "01", Name = "Diario", Type = "PaymentFrequency" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "02", Name = "Semanal", Type = "PaymentFrequency" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "03", Name = "Catorcenal", Type = "PaymentFrequency" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "04", Name = "Quincenal", Type = "PaymentFrequency" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "05", Name = "Mensual", Type = "PaymentFrequency" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "06", Name = "Bimestral", Type = "PaymentFrequency" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "07", Name = "Unidad obra", Type = "PaymentFrequency" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "08", Name = "Comisión", Type = "PaymentFrequency" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "09", Name = "Precio alzado", Type = "PaymentFrequency" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "10", Name = "Decenal", Type = "PaymentFrequency" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "99", Name = "Otra Periodicidad", Type = "PaymentFrequency" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "601", Name = "General de Ley Personas Morales", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "603", Name = "Personas Morales con Fines no Lucrativos", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "605", Name = "Sueldos y Salarios e Ingresos Asimilados a Salarios", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "606", Name = "Arrendamiento", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "608", Name = "Demás ingresos", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "609", Name = "Consolidación", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "610", Name = "Residentes en el Extranjero sin Establecimiento Permanente en México", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "611", Name = "Ingresos por Dividendos (socios y accionistas)", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "612", Name = "Personas Físicas con Actividades Empresariales y Profesionales", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "614", Name = "Ingresos por intereses", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "616", Name = "Sin obligaciones fiscales", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "620", Name = "Sociedades Cooperativas de Producción que optan por diferir sus ingresos", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "621", Name = "Incorporación Fiscal", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "622", Name = "Actividades Agrícolas, Ganaderas, Silvícolas y Pesqueras", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "623", Name = "Opcional para Grupos de Sociedades", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "624", Name = "Coordinados", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "628", Name = "Hidrocarburos", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "607", Name = "Régimen de Enajenación o Adquisición de Bienes", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "629", Name = "De los Regímenes Fiscales Preferentes y de las Empresas Multinacionales", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "630", Name = "Enajenación de acciones en bolsa de valores", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "615", Name = "Régimen de los ingresos por obtención de premios", Type = "FiscalRegime" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "01", Name = "Contrato de trabajo por tiempo indeterminado", Type = "ContractType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "02", Name = "Contrato de trabajo para obra determinada", Type = "ContractType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "03", Name = "Contrato de trabajo por tiempo determinado", Type = "ContractType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "04", Name = "Contrato de trabajo por temporada", Type = "ContractType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "05", Name = "Contrato de trabajo sujeto a prueba", Type = "ContractType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "06", Name = "Contrato de trabajo con capacitación inicial", Type = "ContractType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "07", Name = "Modalidad de contratación por pago de hora laborada", Type = "ContractType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "08", Name = "Modalidad de trabajo por comisión laboral", Type = "ContractType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "09", Name = "Modalidades de contratación donde no existe relación de trabajo", Type = "ContractType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "10", Name = "Jubilación, pensión, retiro.", Type = "ContractType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "99", Name = "Otro contrato", Type = "ContractType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "001", Name = "Seguridad social", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "002", Name = "ISR", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "003", Name = "Aportaciones a retiro, cesantía en edad avanzada y vejez.", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "004", Name = "Otros", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "005", Name = "Aportaciones a Fondo de vivienda", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "006", Name = "Descuento por incapacidad", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "007", Name = "Pensión alimenticia", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "008", Name = "Renta", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "009", Name = "Préstamos provenientes del Fondo Nacional de la Vivienda para los Trabajadores", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "010", Name = "Pago por crédito de vivienda", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "011", Name = "Pago de abonos INFONACOT", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "012", Name = "Anticipo de salarios", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "013", Name = "Pagos hechos con exceso al trabajador", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "014", Name = "Errores", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "015", Name = "Pérdidas", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "016", Name = "Averías", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "017", Name = "Adquisición de artículos producidos por la empresa o establecimiento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "018", Name = "Cuotas para la constitución y fomento de sociedades cooperativas y de cajas de ahorro", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "019", Name = "Cuotas sindicales", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "020", Name = "Ausencia (Ausentismo)", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "021", Name = "Cuotas obrero patronales", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "022", Name = "Impuestos Locales", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "023", Name = "Aportaciones voluntarias", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "024", Name = "Ajuste en Gratificación Anual (Aguinaldo) Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "025", Name = "Ajuste en Gratificación Anual (Aguinaldo) Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "026", Name = "Ajuste en Participación de los Trabajadores en las Utilidades PTU Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "027", Name = "Ajuste en Participación de los Trabajadores en las Utilidades PTU Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "028", Name = "Ajuste en Reembolso de Gastos Médicos Dentales y Hospitalarios Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "029", Name = "Ajuste en Fondo de ahorro Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "030", Name = "Ajuste en Caja de ahorro Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "031", Name = "Ajuste en Contribuciones a Cargo del Trabajador Pagadas por el Patrón Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "032", Name = "Ajuste en Premios por puntualidad Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "033", Name = "Ajuste en Prima de Seguro de vida Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "034", Name = "Ajuste en Seguro de Gastos Médicos Mayores Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "035", Name = "Ajuste en Cuotas Sindicales Pagadas por el Patrón Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "036", Name = "Ajuste en Subsidios por incapacidad Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "037", Name = "Ajuste en Becas para trabajadores y/o hijos Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "038", Name = "Ajuste en Horas extra Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "039", Name = "Ajuste en Horas extra Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "040", Name = "Ajuste en Prima dominical Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "041", Name = "Ajuste en Prima dominical Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "042", Name = "Ajuste en Prima vacacional Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "043", Name = "Ajuste en Prima vacacional Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "044", Name = "Ajuste en Prima por antigüedad Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "045", Name = "Ajuste en Prima por antigüedad Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "046", Name = "Ajuste en Pagos por separación Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "047", Name = "Ajuste en Pagos por separación Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "048", Name = "Ajuste en Seguro de retiro Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "049", Name = "Ajuste en Indemnizaciones Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "050", Name = "Ajuste en Indemnizaciones Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "051", Name = "Ajuste en Reembolso por funeral Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "052", Name = "Ajuste en Cuotas de seguridad social pagadas por el patrón Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "053", Name = "Ajuste en Comisiones Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "054", Name = "Ajuste en Vales de despensa Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "055", Name = "Ajuste en Vales de restaurante Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "056", Name = "Ajuste en Vales de gasolina Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "057", Name = "Ajuste en Vales de ropa Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "058", Name = "Ajuste en Ayuda para renta Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "059", Name = "Ajuste en Ayuda para artículos escolares Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "060", Name = "Ajuste en Ayuda para anteojos Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "061", Name = "Ajuste en Ayuda para transporte Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "062", Name = "Ajuste en Ayuda para gastos de funeral Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "063", Name = "Ajuste en Otros ingresos por salarios Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "064", Name = "Ajuste en Otros ingresos por salarios Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "065", Name = "Ajuste en Jubilaciones, pensiones o haberes de retiro Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "066", Name = "Ajuste en Jubilaciones, pensiones o haberes de retiro Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "067", Name = "Ajuste en Pagos por separación Acumulable", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "068", Name = "Ajuste en Pagos por separación No acumulable", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "069", Name = "Ajuste en Jubilaciones, pensiones o haberes de retiro Acumulable", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "070", Name = "Ajuste en Jubilaciones, pensiones o haberes de retiro No acumulable", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "071", Name = "Ajuste en Subsidio para el empleo (efectivamente entregado al trabajador)", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "072", Name = "Ajuste en Ingresos en acciones o títulos valor que representan bienes Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "073", Name = "Ajuste en Ingresos en acciones o títulos valor que representan bienes Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "074", Name = "Ajuste en Alimentación Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "075", Name = "Ajuste en Alimentación Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "076", Name = "Ajuste en Habitación Exento", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "077", Name = "Ajuste en Habitación Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "078", Name = "Ajuste en Premios por asistencia", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "079", Name = "Ajuste en Pagos distintos a los listados y que no deben considerarse como ingreso por sueldos, salarios o ingresos asimilados.", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "080", Name = "Ajuste en Viáticos gravados", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "081", Name = "Ajuste en Viáticos (entregados al trabajador)", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "082", Name = "Ajuste en Fondo de ahorro Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "083", Name = "Ajuste en Caja de ahorro Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "084", Name = "Ajuste en Prima de Seguro de vida Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "085", Name = "Ajuste en Seguro de Gastos Médicos Mayores Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "086", Name = "Ajuste en Subsidios por incapacidad Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "087", Name = "Ajuste en Becas para trabajadores y/o hijos Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "088", Name = "Ajuste en Seguro de retiro Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "089", Name = "Ajuste en Vales de despensa Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "090", Name = "Ajuste en Vales de restaurante Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "091", Name = "Ajuste en Vales de gasolina Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "092", Name = "Ajuste en Vales de ropa Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "093", Name = "Ajuste en Ayuda para renta Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "094", Name = "Ajuste en Ayuda para artículos escolares Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "095", Name = "Ajuste en Ayuda para anteojos Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "096", Name = "Ajuste en Ayuda para transporte Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "097", Name = "Ajuste en Ayuda para gastos de funeral Gravado", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "098", Name = "Ajuste a ingresos asimilados a salarios gravados", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "099", Name = "Ajuste a ingresos por sueldos y salarios gravados", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "100", Name = "Ajuste en Viáticos exentos", Type = "DeductionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "01", Name = "Dobles", Type = "HourType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "02", Name = "Triples", Type = "HourType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "03", Name = "Simples", Type = "HourType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "01", Name = "Riesgo de trabajo.", Type = "IncapacityType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "02", Name = "Enfermedad en general.", Type = "IncapacityType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "03", Name = "Maternidad.", Type = "IncapacityType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "01", Name = "Diurna", Type = "JourneyType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "02", Name = "Nocturna", Type = "JourneyType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "03", Name = "Mixta", Type = "JourneyType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "04", Name = "Por hora", Type = "JourneyType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "05", Name = "Reducida", Type = "JourneyType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "06", Name = "Continuada", Type = "JourneyType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "07", Name = "Partida", Type = "JourneyType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "08", Name = "Por turnos", Type = "JourneyType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "99", Name = "Otra Jornada", Type = "JourneyType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "O", Name = "Nómina ordinaria", Type = "PaydayType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "E", Name = "Nómina extraordinaria", Type = "PaydayType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "001", Name = "Reintegro de ISR pagado en exceso (siempre que no haya sido enterado al SAT).", Type = "OtherPaymentType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "002", Name = "Subsidio para el empleo (efectivamente entregado al trabajador).", Type = "OtherPaymentType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "003", Name = "Viáticos (entregados al trabajador).", Type = "OtherPaymentType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "004", Name = "Aplicación de saldo a favor por compensación anual.", Type = "OtherPaymentType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "999", Name = "Pagos distintos a los listados y que no deben considerarse como ingreso por sueldos, salarios o ingresos asimilados.", Type = "OtherPaymentType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "001", Name = "Sueldos, Salarios  Rayas y Jornales", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "002", Name = "Gratificación Anual (Aguinaldo)", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "003", Name = "Participación de los Trabajadores en las Utilidades PTU", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "004", Name = "Reembolso de Gastos Médicos Dentales y Hospitalarios", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "005", Name = "Fondo de Ahorro", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "006", Name = "Caja de ahorro", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "009", Name = "Contribuciones a Cargo del Trabajador Pagadas por el Patrón", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "010", Name = "Premios por puntualidad", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "011", Name = "Prima de Seguro de vida", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "012", Name = "Seguro de Gastos Médicos Mayores", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "013", Name = "Cuotas Sindicales Pagadas por el Patrón", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "014", Name = "Subsidios por incapacidad", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "015", Name = "Becas para trabajadores y/o hijos", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "019", Name = "Horas extra", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "020", Name = "Prima dominical", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "021", Name = "Prima vacacional", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "022", Name = "Prima por antigüedad", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "023", Name = "Pagos por separación", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "024", Name = "Seguro de retiro", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "025", Name = "Indemnizaciones", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "026", Name = "Reembolso por funeral", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "027", Name = "Cuotas de seguridad social pagadas por el patrón", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "028", Name = "Comisiones", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "029", Name = "Vales de despensa", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "030", Name = "Vales de restaurante", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "031", Name = "Vales de gasolina", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "032", Name = "Vales de ropa", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "033", Name = "Ayuda para renta", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "034", Name = "Ayuda para artículos escolares", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "035", Name = "Ayuda para anteojos", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "036", Name = "Ayuda para transporte", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "037", Name = "Ayuda para gastos de funeral", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "038", Name = "Otros ingresos por salarios", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "039", Name = "Jubilaciones, pensiones o haberes de retiro", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "044", Name = "Jubilaciones, pensiones o haberes de retiro en parcialidades", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "045", Name = "Ingresos en acciones o títulos valor que representan bienes", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = " 046", Name = "Ingresos asimilados a salarios", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = " 047", Name = "Alimentación", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "048", Name = "Habitación", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "049", Name = "Premios por asistencia", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "050", Name = "Viáticos", Type = "PerceptionType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "002", Name = "Sueldos", Type = "RegimeType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "003", Name = "Jubilados", Type = "RegimeType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "004", Name = "Pensionados", Type = "RegimeType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "005", Name = "Asimilados Miembros Sociedades Cooperativas Produccion", Type = "RegimeType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "006", Name = "Asimilados Integrantes Sociedades Asociaciones Civiles", Type = "RegimeType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "007", Name = "Asimilados Miembros consejos", Type = "RegimeType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "008", Name = "Asimilados comisionistas", Type = "RegimeType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "009", Name = "Asimilados Honorarios", Type = "RegimeType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "010", Name = "Asimilados acciones", Type = "RegimeType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "011", Name = "Asimilados otros", Type = "RegimeType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "012", Name = "Jubilados o Pensionados", Type = "RegimeType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "099", Name = "Otro Regimen", Type = "RegimeType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "001", Name = "Clase I", Type = "RiskType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "002", Name = "Clase II", Type = "RiskType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "003", Name = "Clase III", Type = "RiskType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "004", Name = "Clase IV", Type = "RiskType" });
                    db.Catalog.AddOrUpdate(new CatalogEntry { Key = "005", Name = "Clase V", Type = "RiskType" });
                    db.SaveChanges();
                } catch (Exception e){
                    return;
                }
            }
        }
    }
}