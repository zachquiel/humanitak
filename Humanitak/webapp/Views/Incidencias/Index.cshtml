@using SmartAdminMvc.ViewModels
@model EnterpriseIncidenceInfoViewModel
			<!-- MAIN CONTENT -->
<div id="content">

    <div class="row">
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa fa-exclamation-triangle fa-fw "></i>
                Incidencias
            </h1>
        </div>
    </div>

    <!-- widget grid -->
    <section id="widget-grid" class="">

        <!-- row -->
        <!-- end row -->
        <div class="row">

            <div class="col-sm-12 col-md-12 col-lg-3">
                <!-- new widget -->
                <div class="jarviswidget jarviswidget-color-blueDark"
                     data-widget-colorbutton="true"
                     data-widget-editbutton="true"
                     data-widget-togglebutton="true"
                     data-widget-deletebutton="true"
                     data-widget-fullscreenbutton="true"
                     data-widget-custombutton="true"
                     data-widget-collapsed="false"
                     data-widget-sortable="true">
                    <header>
                        <h2> Agregar Incidencia</h2>
                    </header>

                    <!-- widget div-->
                    <div>

                        <div class="widget-body">
                            <!-- content goes here -->

                            <form id="add-event-form">
                                <fieldset>
                                    <div class="form-group">
                                        <label>Seleccione el empleado</label>
                                        <select id="employee" name="employee" value="" class="form-control">
                                            <option value="0" selected="" disabled="">Empleado</option>
                                            @foreach (var item in Model.Employees) {
                                                <option value="@item.Id">@item.Name</option>
                                            }
                                        </select> <i></i>
                                    </div>
                                    <div class="form-group">
                                        <label>Seleccione tipo de evento</label>
                                        <select id="event" name="event" value="" class="form-control" onchange="checkEnable()">
                                            <option value="0" selected="" disabled="">Evento</option>
                                            <option value="Falta">Falta</option>
                                            <option value="Vacaciones">Vacaciones</option>
                                            <option value="Descanso Trabajando">Descanso Trabajando</option>
                                            <option value="Dia Festivo">Dia Festivo</option>
                                            <option value="Dia Doble">Dia Doble</option>
                                            <option value="Dia Triple">Dia Triple</option>
                                            <option value="Horas Extra">Horas Extra</option>
                                        </select> <i></i>
                                    </div>
                                    <div class="form-group">
                                        <label>Horas Extras:</label>
                                        <input class="form-control" disabled="" id="horas" name="horas" maxlength="40" type="text" placeholder="# de horas">
                                    </div>

                                </fieldset>
                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <button class="btn btn-default" type="button" id="add-event">
                                                Crear evento
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </form>

                            <!-- end content -->
                        </div>

                    </div>
                    <!-- end widget div -->
                </div>
                <!-- end widget -->

                <div class="well well-sm" id="event-container">
                    <form>
                        <fieldset>
                            <legend>
                                Arrastre a la fecha adecuada
                            </legend>
                            <ul id='external-events' class="list-unstyled">
                            </ul>
                            <!--<div class="checkbox">
                                <label>
                                    <input type="checkbox" id="drop-remove" class="checkbox style-0" checked="checked">
                                    <span>remove after drop</span>
                                </label>

                            </div>-->
                        </fieldset>
                    </form>

                </div>
            </div>
            <div class="col-sm-12 col-md-12 col-lg-9">

                <!-- new widget -->
                <div class="jarviswidget jarviswidget-color-blueDark"
                     data-widget-colorbutton="true"
                     data-widget-editbutton="true"
                     data-widget-togglebutton="true"
                     data-widget-deletebutton="true"
                     data-widget-fullscreenbutton="true"
                     data-widget-custombutton="true"
                     data-widget-collapsed="false"
                     data-widget-sortable="true">

                    <!-- widget options:
                usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                data-widget-colorbutton="false"
                data-widget-editbutton="false"
                data-widget-togglebutton="false"
                data-widget-deletebutton="false"
                data-widget-fullscreenbutton="false"
                data-widget-custombutton="false"
                data-widget-collapsed="true"
                data-widget-sortable="false"

                -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-calendar"></i> </span>
                        <h2> Incidencias </h2>
                    </header>

                    <!-- widget div-->
                    <div>

                        <div class="widget-body no-padding">
                            <!-- content goes here -->
                            <div class="widget-body-toolbar">

                                <div id="calendar-buttons">

                                    <div class="btn-group">
                                        <a href="javascript:void(0)" class="btn btn-default btn-xs" id="btn-prev"><i class="fa fa-chevron-left"></i></a>
                                        <a href="javascript:void(0)" class="btn btn-default btn-xs" id="btn-next"><i class="fa fa-chevron-right"></i></a>
                                    </div>
                                </div>
                            </div>
                            <div id="calendar"></div>

                            <!-- end content -->
                        </div>

                    </div>
                    <!-- end widget div -->
                </div>
                <!-- end widget -->

            </div>

        </div>
    </section>
    <div class="modal fade" id="newModal" tabindex="-1" role="dialog">
        <div id="newModalBody" align="center" style="width: 100%; height: 100%; margin-top: 25%;">
            <img src="/Images/spinner.gif"/>
        </div>
    </div>
</div>
<!-- END MAIN CONTENT -->
@section pagespecific {
    <script type="text/javascript">
        function deleteEntry(eventId) {
            $('#calendar').fullCalendar('removeEvents', eventId);
            var theData = new FormData();
            theData.append("EnterpriseId", @Model.Id);
            theData.append("Id", eventId);
            $.ajax({
                url: "/Incidencias/DeleteEvent",
                type: "POST",
                data: theData,
                processData: false,
                contentType: false,
                async: false
            }).done(function(newId) {
                if (eventId == 0)
                    eventId = newId;
                //alert(localEvent.id);
                //$("#newModalBody").html(partialViewResult);
            });
            ///AQUI ES DONDE LLAMAMOS AL DELETE
        }
        function checkEnable() {
            var val = document.getElementById('event').options
                .item(document.getElementById('event').options.selectedIndex).value;
            if (val == "Horas Extra")
                document.getElementById('horas').disabled = false;
            else
                document.getElementById('horas').disabled = true;
        }

        // DO NOT REMOVE : GLOBAL FUNCTIONS!
        var editor;

        $(document).ready(function() {

            "use strict";

            var date = new Date();
            var d = date.getDate();
            var m = date.getMonth();
            var y = date.getFullYear();

            var hdr = {
                left: 'title',
                center: 'month,agendaWeek,agendaDay',
                right: 'prev,today,next'
            };
            var options = [
                "", "red", "greenLight", "orange", "darken", "blue", "blueLight", "yellow"
            ];
            var icons = [
                "", "fa-warning", "fa-user", "fa-briefcase", "fa-calendar-o", "2x", "3x", "fa-clock-o"
            ];
            var initDrag = function(e) {
                // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
                // it doesn't need to have a start or end

                var eventObject = {
                    title: $.trim(e.children().text()), // use the element's text as the event title
                    description: $.trim(e.children('span').attr('data-description')),
                    icon: $.trim(e.children('span').attr('data-icon')),
                    className: $.trim(e.children('span')
                        .attr('class')), // use the element's children as the event class,
                    isDirty : true
                };
                // store the Event Object in the DOM element so we can get to it later
                e.data('eventObject', eventObject);

                // make the event draggable using jQuery UI
                e.draggable({
                    zIndex: 999,
                    revert: true, // will cause the event to go back to its
                    revertDuration: 0 //  original position after the drag
                });
            };

            var addEvent = function(title, priority, description, icon, id) {
                title = title.length === 0 ? "Untitled Event" : title;
                description = description.length === 0 ? "No Description" : description;
                icon = icon.length === 0 ? " " : icon;
                priority = priority.length === 0 ? "label label-default" : priority;

                var html = $('<li><span class="' +
                    priority +
                    '" data-description="' +
                    description +
                    '" data-icon="' +
                    icon +
                    '">' +
                    title +
                    '</span></li>').prependTo('ul#external-events').hide().fadeIn();

                $("#event-container").effect("highlight", 800);

                initDrag(html);
            };

            /* initialize the external events
         -----------------------------------------------------------------*/

            $('#external-events > li').each(function() {
                initDrag($(this));
            });

            $('#add-event').click(function() {
                var num = document.getElementById('event').options.selectedIndex;
                var val = document.getElementById('event').options.item(num).value;
                var emp = document.getElementById('employee').options
                    .item(document.getElementById('employee').options.selectedIndex).innerHTML;
                /*
                 value="bg-color-darken txt-color-white"
                 value="bg-color-blue txt-color-white"
                 value="bg-color-orange txt-color-white"
                 value="bg-color-greenLight txt-color-white"
                 value="bg-color-blueLight txt-color-white"
                 value="bg-color-red txt-color-white"
                 value="bg-color-yellow txt-color-white"
                */
                if (val == "Horas Extra")
                    val = document.getElementById('horas').value + " " + val;
                var title = val,
                    priority = "bg-color-" + options[num] + " txt-color-white",
                    description = emp,
                    icon = icons[num];

                addEvent(title, priority, description, icon);
            });
            /* initialize the calendar

            -----------------------------------------------------------------*/
            var theEvents = [
                @foreach (var item in Model.Incidences) {
                    @:{
                    @:id: @item.Id,
                    @:title: '@item.Type' == 'Horas Extra' ? '@item.ExtraHours' + ' ' + '@item.Type' : '@item.Type',
                    @:start: new Date(@item.Date.Year, (@item.Date.Month - 1), (@item.Date.Day)),
                    @:modelDate: new Date(@item.Date.Year, (@item.Date.Month - 1), (@item.Date.Day)),
                    @:description: '@item.EmployeeName',
                    @:priority: "bg-color-" + options[@item.TypeIndex] + " txt-color-white",
                    @:icon: icons[@item.TypeIndex],
                    @:allDay: true,
                    @:isDirty: false,
                    @:className: ["event", "bg-color-" + options[@item.TypeIndex]]
                    @:},
                }
            ];

            var allEvents = [];
            $('#calendar').fullCalendar({
                header: hdr,
                buttonText: {
                    prev: '<i class="fa fa-chevron-left"></i>',
                    next: '<i class="fa fa-chevron-right"></i>'
                },
                lang: 'es',

                editable: true,
                droppable: true, // this allows things to be dropped onto the calendar !!!

                drop: function(date, allDay) { // this function is called when something is dropped

                    // retrieve the dropped element's stored Event Object
                    var originalEventObject = $(this).data('eventObject');

                    // we need to copy it, so that multiple events don't have a reference to the same object
                    var copiedEventObject = $.extend({}, originalEventObject);

                    // assign it the date that was reported
                    copiedEventObject.start = date;
                    copiedEventObject.allDay = allDay;
                    copiedEventObject.modelDate = date;
                    // render the event on the calendar
                    // the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
                    $('#calendar').fullCalendar('renderEvent', copiedEventObject, true);

                    $(this).remove();

                },

                select: function(start, end, allDay) {
                    var title = prompt('Event Title:');
                    if (title) {
                        calendar.fullCalendar('renderEvent',
                            {
                                title: title,
                                start: start,
                                end: end,
                                allDay: allDay
                            },
                            true // make the event "stick"
                        );
                    }
                    calendar.fullCalendar('unselect');
                },

                events: theEvents,

                eventRender: function(event, element, icon) {
                    allEvents.push(event);
                    element
                        .prepend("<span class='closeon' onclick='deleteEntry("+event.id+")' style='cursor:pointer;'><i class='air air-top-right fa fa-times-circle' style='right: 4px; top: 4px;'></i></span>");
                    if (!event.description == "") {
                        element.find('.fc-event-title').append("<br/><span class='ultra-light'>" +
                            event.description +
                            "</span>");
                    }
                    if (!event.icon == "") {
                        if (event.icon.substring(0, 2) != "fa") {
                            element.find('.fc-event-title').prepend("<br>");
                            element.find('.fc-event-title').append("<i class='air air-top-left fc-event-title'>" +
                                event.icon +
                                "</i><br>");
                        } else {
                            element.find('.fc-event-title').prepend("<br>");
                            element.find('.fc-event-title').append("<i class='air air-top-left fa " +
                                event.icon +
                                " '></i><br>");
                        }
                        var origDate = "";
                        if (!event.isDirty)
                            origDate= event.modelDate.getDate() + "-"+ event.modelDate.getMonth() + "-" + event.modelDate.getFullYear();
                        var newDate= event.start._d.getUTCDate() + "-"+ event.start._d.getUTCMonth() + "-" + event.start._d.getUTCFullYear();
                        if (event.id != null && origDate === newDate)
                            return;
                        ///AQUI ES DONDE LLAMAMOS AL UPSERT
                        //insercion a db:
                        var theData = new FormData();
                        var eventDate = new Date(event.start);
                        var pad = "00";
                        var day = eventDate.getDate() + "";
                        day = pad.substring(0, pad.length - day.length) + day;
                        var monthIndex = eventDate.getMonth() + "";
                        monthIndex = pad.substring(0, pad.length - monthIndex.length) + monthIndex;
                        var year = eventDate.getFullYear();
                        var strDate = day + '/' + monthIndex + '/' + year;
                        theData.append("EnterpriseId", @Model.Id);
                        theData.append("EmployeeName", event.description);
                        theData.append("StringDate", strDate);
                        theData.append("Type", event.title);
                        theData.append("ExtraHours", event.title);
                        theData.append("Id", event.id);
                        $("#newModal").modal('show');
                        $.ajax({
                            url: "/Incidencias/InsertEvent",
                            type: "POST",
                            data: theData,
                            processData: false,
                            contentType: false,
                            async: false
                        }).done(function(newId) {
                            if (isNaN(event.id) || event.id === 0) {
                                event.id = newId;
                                event._id = newId;
                            }
                            $("#newModal").modal('hide');
                            //alert(localEvent.id);
                            //$("#newModalBody").html(partialViewResult);
                        });
                    }

                },
                eventAfterAllRender: function(view) {
                    for (var index = 0; index < allEvents.length; ++index) {
                        var continueAllowed = false;


                        //alert('waited');
                    }
                    allEvents = [];
                },

                windowResize: function(event, ui) {
                    $('#calendar').fullCalendar('render');
                }
            });
            
            /* hide default buttons */
            $('.fc-header-right, .fc-header-center').hide();


            $('#calendar-buttons #btn-prev').click(function() {
                $('.fc-button-prev').click();
                return false;
            });

            $('#calendar-buttons #btn-next').click(function() {
                $('.fc-button-next').click();
                return false;
            });

            $('#calendar-buttons #btn-today').click(function() {
                $('.fc-button-today').click();
                return false;
            });

            $('#mt').click(function() {
                $('#calendar').fullCalendar('changeView', 'month');
            });

            $('#ag').click(function() {
                $('#calendar').fullCalendar('changeView', 'agendaWeek');
            });

            $('#td').click(function() {
                $('#calendar').fullCalendar('changeView', 'agendaDay');
            });

            $('#calendar').fullCalendar('option', 'lang', 'es');
            /* // DOM Position key index //

        l - Length changing (dropdown)
        f - Filtering input (search)
        t - The Table! (datatable)
        i - Information (records)
        p - Pagination (paging)
        r - pRocessing
        < and > - div elements
        <"#id" and > - div with an id
        <"class" and > - div with a class
        <"#id.class" and > - div with an id and class

        Also see: http://legacy.datatables.net/usage/features
        */

            /* BASIC ;*/
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };


            function newTask() {

                var myModal = $('#myModal');
                $.get('/Empresas/Nueva',
                    function(data) {
                        $('#mydiv2').html(data);
                        $('#myModal .modal-header .modal-title').html('Nueva Empresa');
                        $('#myModal').appendTo("body").modal('show');
                    });

            }

            // Edit record
            $('#datatable_tabletools').on('click',
                'a.editor_edit',
                function(e) {
                    e.preventDefault();


                });

            // Delete a record
            $('#datatable_tabletools').on('click',
                'a.editor_remove',
                function(e) {
                    e.preventDefault();


                });

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function() {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new
                            ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function(nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function(oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function() {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new
                            ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function(nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function(oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar")
                .html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change',
                function() {

                    otable
                        .column($(this).parent().index() + ':visible')
                        .search(this.value)
                        .draw();

                });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function() {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new
                            ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function(nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function(oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */
            /*var editor = new $.fn.dataTable.Editor({
            table: "#datatable_tabletools",
            fields: [{
                label: "Razón Social:",
                name: "razon_social"
            }, {
                label: "Ciudad",
                name:"ciudad"
            }, {
                label: "Última Nómina:",
                name: "ultima_nomina"
            }
            ]
        });*/
            /*$('#datatable_tabletools').on('click', 'tbody td:not(:first-child)', function (e) {
            editor.inline(this);
        });*/
            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                        /*{
                    "sExtends": "create",
                    "sButtonText": "Insertar",
                    "editor": editor
                },
                {
                    "sExtends": "copy",
                    "sButtonText": "Copiar"
                },*/
                        "csv",
                        "xls",
                        {
                            "sExtends": "pdf",
                            "sTitle": "Empresas",
                            "sPdfMessage": "Empresas",
                            "sPdfSize": "letter"
                        },
                        {
                            "sExtends": "print",
                            "sButtonText": "Imprimir"
                        }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function() {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new
                            ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function(nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function(oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

        })

    </script>

}